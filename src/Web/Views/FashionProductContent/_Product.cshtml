@using EPiServer.ServiceLocation
@using EPiServer.Web.Routing
@using EPICommerce.Web.Extensions
@using EPICommerce.Web.Helpers
@using EPICommerce.Web.Models.Catalog
@using EPICommerce.Web.Models.Files
@using EPICommerce.Web.Models.ViewModels
@model EPICommerce.Web.Models.ViewModels.FashionProductViewModel
@{
	var id = System.Guid.NewGuid();
	Layout = null;
	var urlResolver = ServiceLocator.Current.GetInstance<UrlResolver>();
	
	var media = Model.Media;
	var defaultCollapsedState = "collapse";
	bool isInEditMode = Html.IsInEditMode();
	if (isInEditMode)
	{
		defaultCollapsedState = "collapse in";
	}

}
<div ng-controller="CartController" class="row product" id="@id">
	<div class="col-sm-4">
@if (media != null && media.Count > 0) {
		<div class="box main-product-image-slider">
			<div class="slider" id="main-product-slider-@(id)">
				<ul class="slides" id="imageslider" ng-model="imageUrl">
					@foreach (var file in media)
					{
						<li>
							@if (file is ImageFile && !string.IsNullOrEmpty(((ImageFile)file).VideoUrl))
							{
							    @Html.Action("Image", "ImageFile", new { currentContent = file, extraImageUrlParameters = "?preset=listmedium" })
                            }
                            else
                            {
                                <div class="easyzoom easyzoom--overlay" title="@Html.Translate("/common/product/click_to_zoom")">
                                    <a href="@(urlResolver.GetDefaultModeUrl(file.ContentLink))">
                                        <img src="@(urlResolver.GetDefaultModeUrl(file.ContentLink))?preset=listmedium" />
                                    </a>
                                </div>
								<a class="full-screen" href="javascript:;">@Html.Translate("/common/product/show_fullscreen")</a>
							}
						</li>
					}
				</ul>
			</div>
		</div>
		<div class="box product-image-slider">
			<div class="slider">
				<ul class="slides">
					@foreach (var file in media)
					{
						<li>
							<a href="javascript:;">
								@if (file is ImageFile && !string.IsNullOrEmpty(((ImageFile)file).VideoUrl))
								{
									<div class="video-container">
										<span class="starter disabled"></span>
										<img src="@(urlResolver.GetDefaultModeUrl(file.ContentLink))?preset=sliderimage" />
									</div>
									
								}
								else
								{
									<img src="@(urlResolver.GetDefaultModeUrl(file.ContentLink))?preset=sliderimage" />
								}
							</a>
						</li>
					}
				</ul>
			</div>
		</div>
}
	</div>

	<div class="col-sm-8 col-md-6 main-product-view" itemscope itemtype="http://schema.org/Product">

		<div class="title">
			
		    <h1 itemprop="name">
		        
		        @Html.PropertyFor(x => x.CatalogContent.DisplayName)
		        <small>@Html.PropertyFor(m => m.CatalogContent.NewItemText)</small>
		    </h1>
			
		</div>
		<div class="price">
			@if (Model.FashionItemViewModel != null)
			{
				@Html.Partial("_Price", Model.FashionItemViewModel.PriceViewModel)
			}
		</div>

		<div class="panel-group information">
			<div class="panel">
				<div class="panel-heading">
					<h4 class="panel-title"><a href="#@(id)-about" data-toggle="collapse" data-parent="#@(id) .information">@Html.Translate("/common/product/about_the_product")<span class="glyphicon glyphicon-chevron-up pull-right"></span></a></h4>
				</div>
				<div id="@(id)-about" class="panel-collapse collapse in">
					<div class="panel-body">
						@Html.PropertyFor(p => p.CatalogContent.Description)
						<p>@Html.Translate("/common/product/color"): <span itemprop="color">@Html.PropertyFor(p => p.CatalogContent.DescriptiveColor)</span></p>
						<p>@Html.Translate("/common/product/code"): <span itemprop="productID">@Model.CatalogContent.Code</span></p>
					</div>
				</div>
			</div>
			<div class="panel">
				<div class="panel-heading">
					<h4 class="panel-title"><a href="#@(id)-sizes" data-toggle="collapse" data-parent="#@(id) .information">@Html.Translate("/common/product/size_and_fit")<span class="glyphicon glyphicon-chevron-down pull-right"></span></a></h4>
				</div>
				<div id="@(id)-sizes" class="panel-collapse @(defaultCollapsedState)">
					<div class="panel-body">
						@Html.PropertyFor(p => p.CatalogContent.SizeAndFit)
					</div>
				</div>
			</div>
			<div class="panel">
				<div class="panel-heading">
					<h4 class="panel-title"><a href="#@(id)-details" data-toggle="collapse" data-parent="#@(id) .information">@Html.Translate("/common/product/details_and_treatment")<span class="glyphicon glyphicon-chevron-down pull-right"></span></a></h4>
				</div>
				<div id="@(id)-details" class="panel-collapse @(defaultCollapsedState)">
					<div class="panel-body">
						@Html.PropertyFor(p => p.CatalogContent.DetailsAndMaintenance)
					</div>
				</div>
			</div>
			<div class="panel">
				<div class="panel-heading">
					<h4 class="panel-title"><a href="#@(id)-delivery" data-toggle="collapse" data-parent="#@(id) .information">@Html.Translate("/common/product/delivery_and_return")<span class="glyphicon glyphicon-chevron-down pull-right"></span></a></h4>
				</div>
				<div id="@(id)-delivery" class="panel-collapse @(defaultCollapsedState)">
					<div class="panel-body">
						@Html.DisplayFor(p => p.DeliveryAndReturns)
					</div>
				</div>
			</div>
		</div>
		<div class="variations clearfix">
			<div class="colors">
				@foreach (var m in Model.AllProductsSameStyle.Value.OrderBy(v => ((FashionProductContent)v.CatalogContent).FacetColor))
				{
					<a href="@Url.ContentUrl(m.CatalogContent.ContentLink)" title="@(!string.IsNullOrEmpty(m.CatalogContent.DisplayName) ? m.CatalogContent.DisplayName : m.CatalogContent.Name)">
						@{ string swatchUrl = Html.AssetSwatch(m.CatalogContent); }
						@if (!string.IsNullOrEmpty(swatchUrl))
						{
							<img src="@swatchUrl" width="32" height="32" class="img-circle @(m.CatalogContent.Code == Model.CatalogContent.Code ? "active" : "")" />
						}
						else
						{
							@(((FashionProductContent)m.CatalogContent).FacetColor)
						}
					</a>
				}
			</div>
			<div class="sizes">
				<div>
					@if (Model.Size != null && Model.Size.Any())
                    {
						@Html.DropDownListFor(x => x.FashionItemViewModel.CatalogContent.Facet_Size, Model.Size, new { @id = "sizesId", Name = "size", ng_model = "product.size", ng_change = "sizeChanged()" })
                        if (Model.SizeGuideReference > 0 || isInEditMode)
                        {
							<input class="help sizeguide" type="button" value="?" data-reference="@Model.SizeGuideReference" title="@Html.Translate("/common/product/sizeguide")" />
						}
					}
				</div>
			</div>
		</div>

		<div class="buttons clearfix">
			@if (Model.FashionItemViewModel != null)
			{
				<div>
					@Html.Partial("_BuyItem", new CartItemModel(Model.FashionItemViewModel.CatalogContent) { CanBuyEntry = Model.IsSellable })
				</div>
			}
		</div>

		@Html.Partial("_SocialBar", new SocialBarViewModel(Html.Translate("/common/product/share")))

	</div>

	<div class="col-sm-12 col-md-2">
		@if (Model.RelatedProducts.Value.Any())
		{
			<div class="wear-it-with-products">
				<div class="panel-heading">
					<a class="panel-title" data-toggle="collapse" href="#wearitwith@(id)">@Html.Translate("/common/product/cross_sell")<span class="glyphicon glyphicon-chevron-up pull-right"></span></a>
				</div>
				<div class="box collapse in" id="wearitwith@(id)">
					<div class="slider">
					    <ul class="slides">
					        @foreach (var p in Model.RelatedProducts.Value)
							{
								<li>
									@Html.Partial("_RelatedProduct", p)
								</li>
							}
					    </ul>
					</div>
				</div>
			</div>
		}
	</div>

</div>



<script type="text/javascript">
	$(document).ready(function () {
	    var p = new commercestarterkit.Product('#@id');
	});
    
</script>
